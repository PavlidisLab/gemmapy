openapi: 3.0.1
info:
  title: Gemma RESTful API
  description: |
    This website documents the usage of the [Gemma RESTful API](https://gemma.msl.ubc.ca/rest/v2/). Here you can find
    example script usage of the API, as well as graphical interface for each endpoint, with description of its
    parameters and the endpoint URL.

    Use of this webpage and the Gemma Web services, including the REST API, is subject to [these terms and conditions](https://pavlidislab.github.io/Gemma/terms.html).
    Please read these in full before continuing to use this webpage or any other part of the Gemma system.

    Fix return type for `getResultSets` which was incorrectly referring to a renamed VO.

    Remove the `security` requirements by default from the specification, which forced the Python package to supply
    empty credentials. There is currently no privileged endpoints, although some can return additional results.

    ## Updates

    ### Update 2.5.1

    Restore `objectClass` visibility in `AnnotationValueObject`.

    Fix incorrect response types for annotations search endpoints returning datasets.

    ### Update 2.5.0

    Major cleanups were performed in this release in order to stabilize the specification. Numerous properties from
    Gemma Web that were never intended to be exposed in Gemma REST have been hidden. It's a bit too much to describe
    in here, but you can navigate to the schemas section below to get a good glance at the models.

    Favour `numberOfSomething` instead of `somethingCount` which is clearer. The older names are kept for
    backward-compatibility, but should be considered deprecated.

    Gene aliases and multifunctionality rank are now filled in `GeneValueObject`.

    Uniformly use `TaxonValueObject` to represent taxon. This is breaking change for the `ExpressionExperimentValueObject`
    and `ArrayDesignValueObject` as their `taxon` property will be an `object` instead of a `string`. Properties such
    as `taxonId` are now deprecated and `taxon.id` should be used instead.

    Entities that have IDs now all inherit from `IdentifiableValueObject`. This implies that you can assume the
    presence of an `id` in a search result `resultObject` attribute for example.

    New `/search` endpoint! for an unified search experience. Annotation-based search endpoints under `/annotations`
    are now deprecated.

    New API docs! While not as nice looking, the previous theme will be gradually ported to Swagger UI as we focused
    on functionality over prettiness for this release.

    ### Update 2.4.0 through 2.4.1

    Release notes for the 2.4 series were not written down, so I'll try to do my best to recall features that were
    introduced at that time.

    An [OpenAPI](https://www.openapis.org/) specification was introduced and available under `/rest/v2/openapi.json`,
    although not fully stabilized.

    Add a `/resultSets` endpoint to navigate result sets directly, by ID or by dataset.

    Add a `/resultSets/{resultSetId}` endpoint to retrieve a specific result set by its ID. This endpoint can be
    negotiated with an `Accept: text/tab-separated-values` header to obtain a TSV representation.

    Add a `/datasets/{dataset}/analyses/differential/resultSets` endpoint that essentially redirect to a specific
    `/resultSet` endpoint by dataset ID.

    Add an endpoint to retrieve preferred raw expression vectors.

    ### Update 2.3.4

    November 6th, 2018

    November 6th [2.3.4] Bug fixes in the dataset search endpoint.

    November 5th [2.3.3] Added filtering parameters to dataset search.

    October 25th [2.3.2] Changed behavior of the dataset search endpoint to more closely match the Gemma web interface.

    October 2nd [2.3.1] Added group information to the User value object.

    September 27th [2.3.0] Breaking change in Taxa: Abbreviation property has been removed and is therefore no longer
    an accepted identifier.

    ### Update 2.2.6

    June 7th, 2018

    Code maintenance, bug fixes. Geeq scores stable and made public.

    June 7th [2.2.6] Added: User authentication endpoint.

    May 2nd [2.2.5] Fixed: Cleaned up and optimized platforms/elements endpoint, removed redundant information
    (recursive properties nesting).

    April 12th [2.2.3] Fixed: Array arguments not handling non-string properties properly, e.g. `ncbiIds` of genes.

    April 9th [2.2.1] Fixed: Filter argument not working when the filtered field was a primitive type. This most
    significantly allows filtering by geeq boolean and double properties.

    ### Update 2.2.0

    February 8th, 2018

    Breaking change in the 'Dataset differential analysis' endpoint:
    - No longer using `qValueThreshold` parameter.
    - Response format changed, now using `DifferentialExpressionAnalysisValueObject` instead of `DifferentialExpressionValueObject`
    - [Experimental] Added Geeq (Gene Expression Experiment Quality) scores to the dataset value objects
  termsOfService: https://pavlidislab.github.io/Gemma/terms.html
  contact:
    name: Pavlidis Lab Support
    url: https://pavlab.msl.ubc.ca/
    email: pavlab-support@msl.ubc.ca
  version: 2.5.1
servers:
- url: https://gemma.msl.ubc.ca/rest/v2
  description: Gemma
- url: https://dev.gemma.msl.ubc.ca/rest/v2
  description: Gemma (development server)
security:
- basicAuth: []
- cookieAuth: []
- {}
paths:
  /resultSets/{resultSet}:
    get:
      summary: Retrieve a single analysis result set by its identifier
      operationId: getResultSet
      parameters:
      - name: resultSet
        in: path
        required: true
        schema:
          type: integer
          description: An expression analysis result set numerical identifier.
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectDifferentialExpressionAnalysisResultSetValueObject'
        "404":
          description: The analysis result set could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /resultSets/{resultSet_}:
    get:
      summary: Retrieve a single analysis result set by its identifier as a tab-separated
        values
      operationId: getResultSetAsTsv
      parameters:
      - name: resultSet_
        in: path
        required: true
        schema:
          type: integer
          description: An expression analysis result set numerical identifier.
          format: int32
      responses:
        "200":
          content:
            text/tab-separated-values; charset=UTF-8:
              schema:
                type: string
                format: binary
              example: "# If you use this file for your research, please cite:\n#\
                \ Lim et al. (2021) Curation of over 10 000 transcriptomic studies\
                \ to enable data reuse.\n# Database, baab006 (doi:10.1093/database/baab006).\n\
                # Experimental factors: [name: genotype, values: [id: 7, characteristics:\
                \ [wild type genotype], id: 8, characteristics: [Mfi2 [mouse] antigen\
                \ p97 (melanoma associated) identified by monoclonal antibodies 133.2\
                \ and 96.5, Homozygous negative]]]\nid\tprobe_id\tprobe_name\tgene_id\t\
                gene_name\tgene_ncbi_id\tgene_official_symbol\tgene_official_name\t\
                pvalue\tcorrected_pvalue\trank\tcontrast_8_log2fc\tcontrast_8_tstat\t\
                contrast_8_pvalue\n2492126315\t86895\t1427283_at\t793757\tKmt2a\t\
                214162\tKmt2a\tlysine (K)-specific methyltransferase 2A\t1.652E-1\t\
                9.116E-1\t1.784E-1\t1.772E-1\t1.696E0\t1.652E-1\n2492126316\t87072\t\
                1427106_at\t721517\tZbtb3\t75291\tZbtb3\tzinc finger and BTB domain\
                \ containing 3\t8.961E-1\t9.863E-1\t9.086E-1\t4.574E-2\t1.391E-1\t\
                8.961E-1\n2492126313\t89962\t1424216_a_at\t555147\tPapola\t18789\t\
                Papola\tpoly (A) polymerase alpha\t4.174E-1\t9.183E-1\t4.544E-1\t\
                -1.627E-1\t-9.033E-1\t4.174E-1\n2492126314\t67610\t1446568_at\t\t\t\
                \t\t\t9.137E-1\t9.888E-1\t9.241E-1\t1.099E-1\t1.154E-1\t9.137E-1\n\
                2492126319\t66807\t1447371_at\t863526\t9430037G07Rik\t320692\t9430037G07Rik\t\
                RIKEN cDNA 9430037G07 gene\t8.41E-1\t9.763E-1\t8.614E-1\t6.666E-2\t\
                2.14E-1\t8.41E-1\n2492126320\t81508\t1432670_at\t\t\t\t\t\t9.086E-1\t\
                9.878E-1\t9.198E-1\t1.773E-1\t1.222E-1\t9.086E-1\n2492126317\t94081\t\
                1420084_at\t\t\t\t\t\t8.125E-1\t9.726E-1\t8.354E-1\t-1.836E-1\t-2.533E-1\t\
                8.125E-1\n2492126318\t59156\t1455033_at\t868095\tFam102b\t329739\t\
                Fam102b\tfamily with sequence similarity 102, member B\t3.26E-1\t\
                9.153E-1\t3.56E-1\t2.782E-1\t1.118E0\t3.26E-1\n2492126307\t86209\t\
                1427969_s_at\t699382\tZfp654\t72020\tZfp654\tzinc finger protein 654\t\
                4.24E-1\t9.198E-1\t4.608E-1\t-1.774E-1\t-8.894E-1\t4.24E-1"
        "404":
          description: The analysis result set could not be found.
  /resultSets:
    get:
      summary: Retrieve all result sets matching the provided criteria
      operationId: getResultSets
      parameters:
      - name: datasets
        in: query
        explode: false
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical dataset identifier.
              format: int64
            - type: string
              description: A dataset short name.
      - name: databaseEntries
        in: query
        explode: false
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A database entry numerical identifier.
              format: int64
            - type: string
              description: A database entry name.
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectDifferentialExpressionAnalysisResultSetValueObject'
  /annotations/search:
    get:
      summary: Search for annotation tags
      operationId: searchAnnotations
      parameters:
      - name: query
        in: query
        explode: false
        schema:
          type: array
          items:
            type: string
            default: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListAnnotationSearchResultValueObject'
        "400":
          description: The search query is empty or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /annotations/search/{query}:
    get:
      summary: Search for annotation tags.
      operationId: searchAnnotationsByPathQuery
      parameters:
      - name: query
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
            default: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListAnnotationSearchResultValueObject'
        "400":
          description: The search query is empty or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
      deprecated: true
  /annotations/search/datasets:
    get:
      summary: Retrieve datasets associated to an annotation tags search
      operationId: searchDatasets
      parameters:
      - name: query
        in: query
        explode: false
        schema:
          type: array
          items:
            type: string
            default: ""
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
        "400":
          description: The search query is empty or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /annotations/search/{query}/datasets:
    get:
      summary: Retrieve datasets associated to an annotation tags search
      operationId: searchDatasetsByQueryInPath
      parameters:
      - name: query
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
            default: ""
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
        "400":
          description: The search query is empty or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
      deprecated: true
  /annotations/{taxon}/search/datasets:
    get:
      summary: Retrieve datasets within a given taxa associated to an annotation tags
        search
      operationId: searchTaxonDatasets
      parameters:
      - name: taxon
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: query
        in: query
        explode: false
        schema:
          type: array
          items:
            type: string
            default: ""
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
        "400":
          description: The search query is empty or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /annotations/{taxon}/search/{query}/datasets:
    get:
      summary: Retrieve datasets within a given taxa associated to an annotation tags
        search
      operationId: searchTaxonDatasetsByQueryInPath
      parameters:
      - name: taxon
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: query
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
            default: ""
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
        "400":
          description: The search query is empty or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
      deprecated: true
  /datasets/{dataset}/annotations:
    get:
      summary: Retrieve the annotations of a dataset
      operationId: getDatasetAnnotations
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectSetAnnotationValueObject'
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/design:
    get:
      summary: Retrieve the design of a dataset
      operationId: getDatasetDesign
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            text/tab-separated-values; charset=UTF-8:
              schema:
                type: string
                format: binary
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{datasets}/expressions/differential:
    get:
      summary: Retrieve the expression levels of a set of datasets subject to a threshold
        on their differential expressions
      operationId: getDatasetDifferentialExpression
      parameters:
      - name: datasets
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical dataset identifier.
              format: int64
            - type: string
              description: A dataset short name.
      - name: diffExSet
        in: query
        schema:
          type: integer
          format: int64
      - name: threshold
        in: query
        schema:
          type: number
          format: double
          default: 1.0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 100
      - name: keepNonSpecific
        in: query
        schema:
          type: boolean
          default: false
      - name: consolidate
        in: query
        schema:
          type: string
          description: An option for gene expression level consolidation.
          enum:
          - pickmax
          - pickvar
          - average
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListExperimentExpressionLevelsValueObject'
  /datasets/{dataset}/analyses/differential:
    get:
      summary: Retrieve annotations and surface level stats for a dataset's differential
        analyses
      operationId: getDatasetDifferentialExpressionAnalyses
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListDifferentialExpressionAnalysisValueObject'
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/analyses/differential/resultSets:
    get:
      summary: Retrieve the result sets of all differential analyses of a dataset
      operationId: getDatasetDifferentialExpressionAnalysesResultSets
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "302":
          description: "If the dataset is found, a redirection to the corresponding\
            \ getResultSets operation."
        "404":
          description: The dataset does not exist.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/data:
    get:
      summary: Retrieve the expression data of a dataset
      operationId: getDatasetExpression
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      - name: filter
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            text/tab-separated-values; charset=UTF-8:
              schema:
                type: string
                format: binary
        "204":
          description: The dataset expression matrix is empty.
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{datasets}/expressions/genes/{genes}:
    get:
      summary: Retrieve the expression data matrix of a set of datasets and genes
      operationId: getDatasetExpressionForGenes
      parameters:
      - name: datasets
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical dataset identifier.
              format: int64
            - type: string
              description: A dataset short name.
      - name: genes
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: string
              description: An Ensembl gene identifier which typically starts with
                'ENSG'.
              externalDocs:
                url: https://www.ensembl.org/
            - type: string
              description: An NCBI gene identifier.
              externalDocs:
                url: https://www.ncbi.nlm.nih.gov/gene
            - type: string
              description: An official gene symbol approved by HGNC.
              externalDocs:
                url: https://www.genenames.org/
      - name: keepNonSpecific
        in: query
        schema:
          type: boolean
          default: false
      - name: consolidate
        in: query
        schema:
          type: string
          description: An option for gene expression level consolidation.
          enum:
          - pickmax
          - pickvar
          - average
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListExperimentExpressionLevelsValueObject'
  /datasets/{datasets}/expressions/pca:
    get:
      summary: Retrieve the principal components (PCA) of a set of datasets
      operationId: getDatasetExpressionPca
      parameters:
      - name: datasets
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical dataset identifier.
              format: int64
            - type: string
              description: A dataset short name.
      - name: component
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 100
      - name: keepNonSpecific
        in: query
        schema:
          type: boolean
          default: false
      - name: consolidate
        in: query
        schema:
          type: string
          description: An option for gene expression level consolidation.
          enum:
          - pickmax
          - pickvar
          - average
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListExperimentExpressionLevelsValueObject'
  /datasets/{dataset}/platforms:
    get:
      summary: Retrieve the platforms of a dataset
      operationId: getDatasetPlatforms
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListArrayDesignValueObject'
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/data/raw:
    get:
      summary: Retrieve raw expression data of a dataset
      operationId: getDatasetRawExpression
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            text/tab-separated-values; charset=UTF-8:
              schema:
                type: string
                format: binary
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/samples:
    get:
      summary: Retrieve the samples of a dataset
      operationId: getDatasetSamples
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListBioAssayValueObject'
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/svd:
    get:
      summary: Retrieve the singular value decomposition (SVD) of a dataset expression
        data
      operationId: getDatasetSvd
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectSimpleSVDValueObject'
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets:
    get:
      summary: Retrieve all datasets
      operationId: getDatasets
      parameters:
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
  /datasets/{dataset}:
    get:
      summary: Retrieve datasets by their identifiers
      operationId: getDatasetsByIds
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical dataset identifier.
              format: int64
            - type: string
              description: A dataset short name.
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
  /genes/{gene}/goTerms:
    get:
      summary: Retrieve the GO terms associated to a gene
      operationId: getGeneGoTerms
      parameters:
      - name: gene
        in: path
        required: true
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListGeneOntologyTermValueObject'
  /genes/{gene}/locations:
    get:
      summary: Retrieve the physical locations of a given gene
      operationId: getGeneLocations
      parameters:
      - name: gene
        in: path
        required: true
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListPhysicalLocationValueObject'
  /genes/{gene}/probes:
    get:
      summary: Retrieve the probes associated to a genes across all platforms
      operationId: getGeneProbes
      parameters:
      - name: gene
        in: path
        required: true
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectCompositeSequenceValueObject'
  /genes/{genes}:
    get:
      summary: Retrieve genes matching gene identifiers
      operationId: getGenes
      parameters:
      - name: genes
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: string
              description: An Ensembl gene identifier which typically starts with
                'ENSG'.
              externalDocs:
                url: https://www.ensembl.org/
            - type: string
              description: An NCBI gene identifier.
              externalDocs:
                url: https://www.ncbi.nlm.nih.gov/gene
            - type: string
              description: An official gene symbol approved by HGNC.
              externalDocs:
                url: https://www.genenames.org/
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListGeneValueObject'
  /platforms/{platform}/annotations:
    get:
      summary: Retrieve the annotations of a given platform
      operationId: getPlatformAnnotations
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      responses:
        "200":
          content:
            text/tab-separated-values; charset=UTF-8:
              schema:
                type: string
                format: binary
  /platforms/{platform}/datasets:
    get:
      summary: Retrieve all experiments using a given platform
      operationId: getPlatformDatasets
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
  /platforms/{platform}/elements/{probes}:
    get:
      summary: Retrieve the selected composite sequences for a given platform
      operationId: getPlatformElement
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      - name: probes
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A composite sequence numerical identifier.
              format: int64
            - type: string
              description: A composite sequence name.
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectCompositeSequenceValueObject'
  /platforms/{platform}/elements/{probe}/genes:
    get:
      summary: Retrieve the genes associated to a probe in a given platform
      operationId: getPlatformElementGenes
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      - name: probe
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A composite sequence numerical identifier.
            format: int64
          - type: string
            description: A composite sequence name.
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectGeneValueObject'
  /platforms/{platform}/elements:
    get:
      summary: Retrieve the composite sequences for a given platform
      operationId: getPlatformElements
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectCompositeSequenceValueObject'
  /platforms:
    get:
      summary: Retrieve all platforms
      operationId: getPlatforms
      parameters:
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectArrayDesignValueObject'
  /platforms/{platform}:
    get:
      summary: Retrieve all platforms matching a set of platform identifiers
      operationId: getPlatformsByIds
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A platform numerical identifier.
              format: int64
            - type: string
              description: A platform short name.
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectArrayDesignValueObject'
  /:
    get:
      summary: Retrieve an object with basic API information
      operationId: getApiInfo
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectApiInfoValueObject'
  /search:
    get:
      summary: Search everything in Gemma.
      operationId: search
      parameters:
      - name: query
        in: query
        schema:
          type: string
      - name: taxon
        in: query
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: platform
        in: query
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      - name: resultTypes
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ubic.gemma.model.expression.designElement.CompositeSequence
            - ubic.gemma.model.common.description.BibliographicReference
            - ubic.gemma.model.expression.experiment.ExpressionExperiment
            - ubic.gemma.model.analysis.expression.ExpressionExperimentSet
            - ubic.gemma.model.association.phenotype.PhenotypeAssociation
            - ubic.gemma.model.genome.gene.GeneSet
            - ubic.gemma.model.genome.biosequence.BioSequence
            - ubic.gemma.model.expression.arrayDesign.ArrayDesign
            - ubic.gemma.model.genome.Gene
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultsResponseDataObject'
  /taxa/{taxon}/genes/{gene}/locations:
    get:
      summary: Retrieve physical locations for a given gene and taxon
      operationId: getGeneLocationsInTaxon
      parameters:
      - name: taxon
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: gene
        in: path
        required: true
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListPhysicalLocationValueObject'
  /taxa:
    get:
      summary: Retrieve all available taxa
      operationId: getTaxa
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListTaxonValueObject'
  /taxa/{taxa}:
    get:
      summary: Retrieve taxa by their identifiers
      operationId: getTaxaByIds
      parameters:
      - name: taxa
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical taxon identifier.
              format: int64
            - type: integer
              description: An NCBI taxon identifier.
              format: int64
              externalDocs:
                url: https://www.ncbi.nlm.nih.gov/taxonomy
            - type: string
              description: A taxon identifier that matches either its scientific or
                common name.
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListTaxonValueObject'
  /taxa/{taxon}/datasets:
    get:
      summary: Retrieve the datasets for a given taxon
      operationId: getTaxonDatasets
      parameters:
      - name: taxon
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
  /taxa/{taxon}/genes/{gene}:
    get:
      summary: Retrieve all genes in a given taxon
      operationId: getTaxonGenes
      parameters:
      - name: taxon
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: gene
        in: path
        required: true
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListGeneValueObject'
  /taxa/{taxon}/chromosomes/{chromosome}/genes:
    get:
      summary: Retrieve genes overlapping a given region in a taxon
      operationId: getTaxonGenesOverlappingChromosome
      parameters:
      - name: taxon
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: chromosome
        in: path
        required: true
        schema:
          type: string
      - name: strand
        in: query
        schema:
          type: string
          default: +
      - name: start
        in: query
        schema:
          type: integer
          format: int64
      - name: size
        in: query
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListGeneValueObject'
components:
  schemas:
    ResponseErrorObject:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/WellComposedErrorBody'
        apiVersion:
          type: string
    WellComposedErrorBody:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    CharacteristicBasicValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        value:
          type: string
        valueUri:
          type: string
        category:
          type: string
        categoryUri:
          type: string
    ContrastResultValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        pvalue:
          type: number
          format: double
        coefficient:
          type: number
          format: double
        logFoldChange:
          type: number
          format: double
        factorValue:
          $ref: '#/components/schemas/FactorValueBasicValueObject'
        secondFactorValue:
          $ref: '#/components/schemas/FactorValueBasicValueObject'
        tstat:
          type: number
          format: double
    DiffExResultSetSummaryValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        arrayDesignsUsed:
          type: array
          items:
            type: integer
            format: int64
        baselineGroup:
          $ref: '#/components/schemas/FactorValueValueObject'
        experimentalFactors:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentalFactorValueObject'
        numberOfGenesAnalyzed:
          type: integer
          format: int32
        numberOfProbesAnalyzed:
          type: integer
          format: int32
        threshold:
          type: number
          format: double
        numberOfDiffExpressedProbes:
          type: integer
          format: int32
        upregulatedCount:
          type: integer
          format: int32
        downregulatedCount:
          type: integer
          format: int32
        numberOfUpregulatedProbes:
          type: integer
          format: int32
        numberOfDownregulatedProbes:
          type: integer
          format: int32
        qvalue:
          type: number
          format: double
    DifferentialExpressionAnalysisResultSetValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        analysis:
          $ref: '#/components/schemas/DifferentialExpressionAnalysisValueObject'
        experimentalFactors:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentalFactorValueObject'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DifferentialExpressionAnalysisResultValueObject'
    DifferentialExpressionAnalysisResultValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        probeId:
          type: integer
          format: int64
        probeName:
          type: string
        genes:
          type: array
          items:
            $ref: '#/components/schemas/GeneValueObject'
        correctedPvalue:
          type: number
          format: double
        rank:
          type: number
          format: double
        contrasts:
          type: array
          items:
            $ref: '#/components/schemas/ContrastResultValueObject'
        pvalue:
          type: number
          format: double
    DifferentialExpressionAnalysisValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        factorValuesUsed:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/FactorValueValueObject'
        resultSets:
          type: array
          items:
            $ref: '#/components/schemas/DiffExResultSetSummaryValueObject'
        arrayDesignsUsed:
          type: array
          items:
            type: integer
            format: int64
        bioAssaySetId:
          type: integer
          format: int64
        sourceExperiment:
          type: integer
          format: int64
        subsetFactor:
          $ref: '#/components/schemas/ExperimentalFactorValueObject'
        subsetFactorValue:
          $ref: '#/components/schemas/FactorValueValueObject'
        factorValuesUsedByExperimentalFactorId:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/FactorValueValueObject'
        isSubset:
          type: boolean
    ExperimentalFactorValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          type: string
        categoryUri:
          type: string
        description:
          type: string
        factorValues:
          type: string
        name:
          type: string
        type:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/FactorValueValueObject'
    ExternalDatabaseValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        uri:
          type: string
    FactorValueBasicValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicBasicValueObject'
        experimentalFactorCategory:
          $ref: '#/components/schemas/CharacteristicBasicValueObject'
        measurement:
          $ref: '#/components/schemas/MeasurementValueObject'
        value:
          type: string
        summary:
          type: string
        experimentalFactorId:
          type: integer
          format: int64
        isBaseline:
          type: boolean
    FactorValueValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          type: string
        categoryUri:
          type: string
        description:
          type: string
        value:
          type: string
        valueUri:
          type: string
        charId:
          type: integer
          format: int64
        factorId:
          type: integer
          format: int64
        factorValue:
          type: string
        isBaseline:
          type: boolean
        isMeasurement:
          type: boolean
    GeneValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        aliases:
          uniqueItems: true
          type: array
          items:
            type: string
        multifunctionalityRank:
          type: number
          format: double
        ncbiId:
          type: integer
          format: int32
        ensemblId:
          type: string
        officialName:
          type: string
        officialSymbol:
          type: string
        taxon:
          $ref: '#/components/schemas/TaxonValueObject'
    MeasurementValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        value:
          type: string
        unit:
          type: string
        type:
          type: string
        representation:
          type: string
    ResponseDataObjectDifferentialExpressionAnalysisResultSetValueObject:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DifferentialExpressionAnalysisResultSetValueObject'
    TaxonValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        scientificName:
          type: string
        commonName:
          type: string
        ncbiId:
          type: integer
          format: int32
        externalDatabase:
          $ref: '#/components/schemas/ExternalDatabaseValueObject'
    PaginatedResponseDataObjectDifferentialExpressionAnalysisResultSetValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DifferentialExpressionAnalysisResultSetValueObject'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortValueObject'
        totalElements:
          type: integer
          format: int64
    SortValueObject:
      type: object
      properties:
        orderBy:
          type: string
        direction:
          type: string
    DatasetArg:
      oneOf:
      - type: integer
        description: A numerical dataset identifier.
        format: int64
      - type: string
        description: A dataset short name.
    DatabaseEntryArg:
      oneOf:
      - type: integer
        description: A database entry numerical identifier.
        format: int64
      - type: string
        description: A database entry name.
    AnnotationSearchResultValueObject:
      type: object
      properties:
        value:
          type: string
        valueUri:
          type: string
        category:
          type: string
        categoryUri:
          type: string
    ResponseDataObjectListAnnotationSearchResultValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AnnotationSearchResultValueObject'
    AuditEventValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        performer:
          type: string
        date:
          type: string
          format: date-time
        action:
          type: string
        note:
          type: string
        detail:
          type: string
        eventTypeName:
          type: string
        actionName:
          type: string
    ExpressionExperimentValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        lastUpdated:
          type: string
          format: date-time
        troubled:
          type: boolean
        lastTroubledEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        needsAttention:
          type: boolean
        lastNeedsAttentionEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        curationNote:
          type: string
        lastNoteUpdateEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        numberOfBioAssays:
          type: integer
          format: int32
        description:
          type: string
        name:
          type: string
        accession:
          type: string
        batchConfound:
          type: string
        batchEffect:
          type: string
        externalDatabase:
          type: string
        externalUri:
          type: string
        geeq:
          $ref: '#/components/schemas/GeeqValueObject'
        metadata:
          type: string
        shortName:
          type: string
        source:
          type: string
        technologyType:
          type: string
        taxonId:
          type: integer
          format: int64
        bioAssayCount:
          type: integer
          format: int32
        troubleDetails:
          type: string
        numberOfArrayDesigns:
          type: integer
          format: int64
        numberOfProcessedExpressionVectors:
          type: integer
          format: int32
        taxon:
          $ref: '#/components/schemas/TaxonValueObject'
    GeeqValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        publicQualityScore:
          type: number
          format: double
        publicSuitabilityScore:
          type: number
          format: double
        noVectors:
          type: boolean
        corrMatIssues:
          type: string
          format: byte
        replicatesIssues:
          type: string
          format: byte
        batchCorrected:
          type: boolean
        sScorePublication:
          type: number
          format: double
        sScorePlatformAmount:
          type: number
          format: double
        sScorePlatformTechMulti:
          type: number
          format: double
        sScoreAvgPlatformPopularity:
          type: number
          format: double
        sScoreAvgPlatformSize:
          type: number
          format: double
        sScoreSampleSize:
          type: number
          format: double
        sScoreRawData:
          type: number
          format: double
        sScoreMissingValues:
          type: number
          format: double
        qScoreOutliers:
          type: number
          format: double
        qScoreSampleMeanCorrelation:
          type: number
          format: double
        qScoreSampleMedianCorrelation:
          type: number
          format: double
        qScoreSampleCorrelationVariance:
          type: number
          format: double
        qScorePlatformsTech:
          type: number
          format: double
        qScoreReplicates:
          type: number
          format: double
        qScoreBatchInfo:
          type: number
          format: double
        qScorePublicBatchEffect:
          type: number
          format: double
        qScorePublicBatchConfound:
          type: number
          format: double
    PaginatedResponseDataObjectExpressionExperimentValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExpressionExperimentValueObject'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortValueObject'
        totalElements:
          type: integer
          format: int64
    TaxonArg:
      oneOf:
      - type: integer
        description: A numerical taxon identifier.
        format: int64
      - type: integer
        description: An NCBI taxon identifier.
        format: int64
        externalDocs:
          url: https://www.ncbi.nlm.nih.gov/taxonomy
      - type: string
        description: A taxon identifier that matches either its scientific or common
          name.
    AnnotationValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        classUri:
          type: string
        className:
          type: string
        termUri:
          type: string
        termName:
          type: string
        description:
          type: string
        evidenceCode:
          type: string
        objectClass:
          type: string
    ResponseDataObjectSetAnnotationValueObject:
      type: object
      properties:
        data:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AnnotationValueObject'
    ExperimentExpressionLevelsValueObject:
      type: object
      properties:
        datasetId:
          type: integer
          format: int64
        geneExpressionLevels:
          type: array
          items:
            $ref: '#/components/schemas/GeneElementExpressionsValueObject'
    GeneElementExpressionsValueObject:
      type: object
      properties:
        geneOfficialSymbol:
          type: string
        geneNcbiId:
          type: integer
          format: int32
        vectors:
          type: array
          items:
            $ref: '#/components/schemas/VectorElementValueObject'
    ResponseDataObjectListExperimentExpressionLevelsValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentExpressionLevelsValueObject'
    VectorElementValueObject:
      type: object
      properties:
        designElementName:
          type: string
        bioAssayExpressionLevels:
          type: object
          additionalProperties:
            type: number
            format: double
    ResponseDataObjectListDifferentialExpressionAnalysisValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DifferentialExpressionAnalysisValueObject'
    GeneArg:
      oneOf:
      - type: string
        description: An Ensembl gene identifier which typically starts with 'ENSG'.
        externalDocs:
          url: https://www.ensembl.org/
      - type: string
        description: An NCBI gene identifier.
        externalDocs:
          url: https://www.ncbi.nlm.nih.gov/gene
      - type: string
        description: An official gene symbol approved by HGNC.
        externalDocs:
          url: https://www.genenames.org/
    ArrayDesignValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        lastUpdated:
          type: string
          format: date-time
        troubled:
          type: boolean
        lastTroubledEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        needsAttention:
          type: boolean
        lastNeedsAttentionEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        curationNote:
          type: string
        lastNoteUpdateEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        color:
          type: string
        description:
          type: string
        expressionExperimentCount:
          type: integer
          format: int64
        isMerged:
          type: boolean
        isMergee:
          type: boolean
        name:
          type: string
        shortName:
          type: string
        technologyType:
          type: string
        numberOfExpressionExperiments:
          type: integer
          format: int64
        taxonID:
          type: integer
          format: int64
        troubleDetails:
          type: string
        numberOfSwitchedExpressionExperiments:
          type: integer
          format: int64
        taxon:
          $ref: '#/components/schemas/TaxonValueObject'
    ResponseDataObjectListArrayDesignValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ArrayDesignValueObject'
    BioAssayValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        accession:
          $ref: '#/components/schemas/DatabaseEntryValueObject'
        arrayDesign:
          $ref: '#/components/schemas/ArrayDesignValueObject'
        description:
          type: string
        metadata:
          type: string
        name:
          type: string
        originalPlatform:
          $ref: '#/components/schemas/ArrayDesignValueObject'
        outlier:
          type: boolean
        predictedOutlier:
          type: boolean
        processingDate:
          type: string
          format: date-time
        sample:
          $ref: '#/components/schemas/BioMaterialValueObject'
        userFlaggedOutlier:
          type: boolean
    BioMaterialValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        bioAssayIds:
          type: array
          items:
            type: integer
            format: int64
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicValueObject'
        factorValueObjects:
          type: array
          items:
            $ref: '#/components/schemas/IdentifiableValueObject'
        factorValues:
          type: array
          items:
            $ref: '#/components/schemas/IdentifiableValueObject'
    CharacteristicValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          type: string
        categoryUri:
          type: string
        ontologyUsed:
          type: string
        value:
          type: string
        valueUri:
          type: string
    DatabaseEntryValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        accession:
          type: string
        externalDatabase:
          $ref: '#/components/schemas/ExternalDatabaseValueObject'
    IdentifiableValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
    ResponseDataObjectListBioAssayValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BioAssayValueObject'
    ResponseDataObjectSimpleSVDValueObject:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SimpleSVDValueObject'
    SimpleSVDValueObject:
      type: object
      properties:
        bioMaterialIds:
          type: array
          items:
            type: integer
            format: int64
        variances:
          type: array
          items:
            type: number
            format: double
        vmatrix:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
    GeneOntologyTermValueObject:
      type: object
      properties:
        goId:
          type: string
        label:
          type: string
        uri:
          type: string
        comment:
          type: string
        localName:
          type: string
        term:
          type: string
        obsolete:
          type: boolean
    ResponseDataObjectListGeneOntologyTermValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GeneOntologyTermValueObject'
    PhysicalLocationValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nucleotide:
          type: integer
          format: int64
        nucleotideLength:
          type: integer
          format: int32
        strand:
          type: string
        bin:
          type: integer
          format: int32
        chromosome:
          type: string
        taxon:
          $ref: '#/components/schemas/TaxonValueObject'
    ResponseDataObjectListPhysicalLocationValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PhysicalLocationValueObject'
    CompositeSequenceValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        arrayDesign:
          $ref: '#/components/schemas/ArrayDesignValueObject'
    PaginatedResponseDataObjectCompositeSequenceValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CompositeSequenceValueObject'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortValueObject'
        totalElements:
          type: integer
          format: int64
    ResponseDataObjectListGeneValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GeneValueObject'
    PlatformArg:
      oneOf:
      - type: integer
        description: A platform numerical identifier.
        format: int64
      - type: string
        description: A platform short name.
    CompositeSequenceArg:
      oneOf:
      - type: integer
        description: A composite sequence numerical identifier.
        format: int64
      - type: string
        description: A composite sequence name.
    PaginatedResponseDataObjectGeneValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GeneValueObject'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortValueObject'
        totalElements:
          type: integer
          format: int64
    PaginatedResponseDataObjectArrayDesignValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ArrayDesignValueObject'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortValueObject'
        totalElements:
          type: integer
          format: int64
    ApiInfoValueObject:
      type: object
      properties:
        welcome:
          type: string
        version:
          type: string
        docs:
          type: string
    ResponseDataObjectApiInfoValueObject:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApiInfoValueObject'
    SearchResultValueObject:
      type: object
      properties:
        resultId:
          type: integer
          format: int64
        resultType:
          $ref: '#/components/schemas/SearchResultType'
        score:
          type: number
          format: double
        resultObject:
          $ref: '#/components/schemas/IdentifiableValueObject'
    SearchResultsResponseDataObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultValueObject'
        searchSettings:
          $ref: '#/components/schemas/SearchSettingsValueObject'
    SearchSettingsValueObject:
      type: object
      properties:
        query:
          type: string
        resultTypes:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultType'
        taxon:
          $ref: '#/components/schemas/TaxonValueObject'
        platform:
          $ref: '#/components/schemas/ArrayDesignValueObject'
        maxResults:
          type: integer
          format: int32
    SearchResultType:
      type: array
      items:
        type: string
        enum:
        - ubic.gemma.model.expression.designElement.CompositeSequence
        - ubic.gemma.model.common.description.BibliographicReference
        - ubic.gemma.model.expression.experiment.ExpressionExperiment
        - ubic.gemma.model.analysis.expression.ExpressionExperimentSet
        - ubic.gemma.model.association.phenotype.PhenotypeAssociation
        - ubic.gemma.model.genome.gene.GeneSet
        - ubic.gemma.model.genome.biosequence.BioSequence
        - ubic.gemma.model.expression.arrayDesign.ArrayDesign
        - ubic.gemma.model.genome.Gene
    ResponseDataObjectListTaxonValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaxonValueObject'
  securitySchemes:
    basicAuth:
      type: http
      description: Authenticate with your Gemma username and password
      scheme: basic
    cookieAuth:
      type: apiKey
      description: Authenticate with your current Gemma session.
      name: JSESSIONID
      in: cookie
