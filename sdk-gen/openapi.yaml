openapi: 3.0.1
info:
  title: Gemma RESTful API
  description: "This website documents the usage of the [Gemma REST API](https://gemma.msl.ubc.ca/rest/v2/).\
    \ Here you can find\nexample script usage of the API, as well\nas graphical interface\
    \ for each endpoint, with description of its parameters and the endpoint URL.\n\
    \nThe documentation of the underlying java code can be found [here](https://gemma.msl.ubc.ca/resources/apidocs/ubic/gemma/web/services/rest/package-summary.html).\n\
    See the [links section](https://gemma.msl.ubc.ca/resources/restapidocs/#footer)\
    \ in the footer of this page for\nother relevant links.\n\nUse of this webpage\
    \ and Gemma web services, including the REST API, is subject to [these terms and\
    \ conditions](https://pavlidislab.github.io/Gemma/terms.html).\nPlease read these\
    \ in full before continuing to use this webpage or any other part of the Gemma\
    \ system.\n"
  termsOfService: https://pavlidislab.github.io/Gemma/terms.html
  contact:
    name: Pavlidis Lab Support
    url: https://pavlab.msl.ubc.ca/
    email: pavlab-support@msl.ubc.ca
  version: 2.4.1
servers:
- url: /rest/v2
security:
- basicAuth: []
- cookieAuth: []
- {}
paths:
  /resultSets/{resultSet}:
    get:
      summary: Retrieve a single analysis result set by its identifier
      operationId: getResultSet
      parameters:
      - name: resultSet
        in: path
        required: true
        schema:
          type: integer
          description: An expression analysis result set numerical identifier.
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectExpressionAnalysisResultSetValueObject'
        "404":
          description: The analysis result set could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /resultSets/{resultSet_}:
    get:
      summary: Retrieve a single analysis result set by its identifier as a tab-separated
        values
      operationId: getResultSetAsTsv
      parameters:
      - name: resultSet_
        in: path
        required: true
        schema:
          type: integer
          description: An expression analysis result set numerical identifier.
          format: int32
      responses:
        "200":
          content:
            text/tab-separated-values; charset=UTF-8:
              schema:
                type: string
                format: binary
              example: "# If you use this file for your research, please cite:\n#\
                \ Lim et al. (2021) Curation of over 10 000 transcriptomic studies\
                \ to enable data reuse.\n# Database, baab006 (doi:10.1093/database/baab006).\n\
                # Experimental factors: [name: genotype, values: [id: 7, characteristics:\
                \ [wild type genotype], id: 8, characteristics: [Mfi2 [mouse] antigen\
                \ p97 (melanoma associated) identified by monoclonal antibodies 133.2\
                \ and 96.5, Homozygous negative]]]\nid\tprobe_id\tprobe_name\tgene_id\t\
                gene_name\tgene_ncbi_id\tgene_official_symbol\tgene_official_name\t\
                pvalue\tcorrected_pvalue\trank\tcontrast_8_log2fc\tcontrast_8_tstat\t\
                contrast_8_pvalue\n2492126315\t86895\t1427283_at\t793757\tKmt2a\t\
                214162\tKmt2a\tlysine (K)-specific methyltransferase 2A\t1.652E-1\t\
                9.116E-1\t1.784E-1\t1.772E-1\t1.696E0\t1.652E-1\n2492126316\t87072\t\
                1427106_at\t721517\tZbtb3\t75291\tZbtb3\tzinc finger and BTB domain\
                \ containing 3\t8.961E-1\t9.863E-1\t9.086E-1\t4.574E-2\t1.391E-1\t\
                8.961E-1\n2492126313\t89962\t1424216_a_at\t555147\tPapola\t18789\t\
                Papola\tpoly (A) polymerase alpha\t4.174E-1\t9.183E-1\t4.544E-1\t\
                -1.627E-1\t-9.033E-1\t4.174E-1\n2492126314\t67610\t1446568_at\t\t\t\
                \t\t\t9.137E-1\t9.888E-1\t9.241E-1\t1.099E-1\t1.154E-1\t9.137E-1\n\
                2492126319\t66807\t1447371_at\t863526\t9430037G07Rik\t320692\t9430037G07Rik\t\
                RIKEN cDNA 9430037G07 gene\t8.41E-1\t9.763E-1\t8.614E-1\t6.666E-2\t\
                2.14E-1\t8.41E-1\n2492126320\t81508\t1432670_at\t\t\t\t\t\t9.086E-1\t\
                9.878E-1\t9.198E-1\t1.773E-1\t1.222E-1\t9.086E-1\n2492126317\t94081\t\
                1420084_at\t\t\t\t\t\t8.125E-1\t9.726E-1\t8.354E-1\t-1.836E-1\t-2.533E-1\t\
                8.125E-1\n2492126318\t59156\t1455033_at\t868095\tFam102b\t329739\t\
                Fam102b\tfamily with sequence similarity 102, member B\t3.26E-1\t\
                9.153E-1\t3.56E-1\t2.782E-1\t1.118E0\t3.26E-1\n2492126307\t86209\t\
                1427969_s_at\t699382\tZfp654\t72020\tZfp654\tzinc finger protein 654\t\
                4.24E-1\t9.198E-1\t4.608E-1\t-1.774E-1\t-8.894E-1\t4.24E-1"
        "404":
          description: The analysis result set could not be found.
  /resultSets:
    get:
      summary: Retrieve all result sets matching the provided criteria
      operationId: getResultSets
      parameters:
      - name: datasets
        in: query
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical dataset identifier.
              format: int64
            - type: string
              description: A dataset short name.
      - name: databaseEntries
        in: query
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A database entry numerical identifier.
              format: int64
            - type: string
              description: A database entry name.
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionAnalysisResultSetValueObject'
  /annotations/search/{query}:
    get:
      summary: Search for annotation tags
      operationId: searchAnnotations
      parameters:
      - name: query
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
            default: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListAnnotationSearchResultValueObject'
        "400":
          description: The search query is empty.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /annotations/search/{query}/datasets:
    get:
      summary: Retrieve datasets associated to an annotation tags search
      operationId: searchDatasets
      parameters:
      - name: query
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
  /annotations/{taxon}/search/{query}/datasets:
    get:
      summary: Retrieve datasets within a given taxa associated to an annotation tags
        search
      operationId: searchTaxonDatasets
      parameters:
      - name: taxon
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: query
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
  /datasets/{dataset}/annotations:
    get:
      summary: Retrieve the annotations analysis of a dataset
      operationId: getDatasetAnnotations
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectSetAnnotationValueObject'
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/design:
    get:
      summary: Retrieve the design of a dataset
      operationId: getDatasetDesign
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            text/tab-separated-values; charset=UTF-8:
              schema:
                type: string
                format: binary
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{datasets}/expressions/differential:
    get:
      summary: Retrieve the expression levels of a set of datasets subject to a threshold
        on their differential expressions
      operationId: getDatasetDifferentialExpression
      parameters:
      - name: datasets
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical dataset identifier.
              format: int64
            - type: string
              description: A dataset short name.
      - name: diffExSet
        in: query
        schema:
          type: integer
          format: int64
      - name: threshold
        in: query
        schema:
          type: number
          format: double
          default: 1.0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 100
      - name: keepNonSpecific
        in: query
        schema:
          type: boolean
          default: false
      - name: consolidate
        in: query
        schema:
          type: string
          description: An option for gene expression level consolidation.
          enum:
          - pickmax
          - pickvar
          - average
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListExperimentExpressionLevelsValueObject'
  /datasets/{dataset}/analyses/differential:
    get:
      summary: Retrieve the differential analyses of a dataset
      operationId: getDatasetDifferentialExpressionAnalyses
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListDifferentialExpressionAnalysisValueObject'
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/analyses/differential/resultSets:
    get:
      summary: Retrieve the result sets of all differential analyses of a dataset
      operationId: getDatasetDifferentialExpressionAnalysesResultSets
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "302":
          description: "If the dataset is found, a redirection to the corresponding\
            \ getResultSets operation."
        "404":
          description: The dataset does not exist.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/data:
    get:
      summary: Retrieve the expression data of a dataset
      operationId: getDatasetExpression
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      - name: filter
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            text/tab-separated-values; charset=UTF-8:
              schema:
                type: string
                format: binary
        "204":
          description: The dataset expression matrix is empty.
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{datasets}/expressions/genes/{genes}:
    get:
      summary: Retrieve the expression data matrix of a set of datasets and genes
      operationId: getDatasetExpressionForGenes
      parameters:
      - name: datasets
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical dataset identifier.
              format: int64
            - type: string
              description: A dataset short name.
      - name: genes
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: string
              description: An Ensembl gene identifier which typically starts with
                'ENSG'.
              externalDocs:
                url: https://www.ensembl.org/
            - type: string
              description: An NCBI gene identifier.
              externalDocs:
                url: https://www.ncbi.nlm.nih.gov/gene
            - type: string
              description: An official gene symbol approved by HGNC.
              externalDocs:
                url: https://www.genenames.org/
      - name: keepNonSpecific
        in: query
        schema:
          type: boolean
          default: false
      - name: consolidate
        in: query
        schema:
          type: string
          description: An option for gene expression level consolidation.
          enum:
          - pickmax
          - pickvar
          - average
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListExperimentExpressionLevelsValueObject'
  /datasets/{datasets}/expressions/pca:
    get:
      summary: Retrieve the principal components (PCA) of a set of datasets
      operationId: getDatasetExpressionPca
      parameters:
      - name: datasets
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical dataset identifier.
              format: int64
            - type: string
              description: A dataset short name.
      - name: component
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 100
      - name: keepNonSpecific
        in: query
        schema:
          type: boolean
          default: false
      - name: consolidate
        in: query
        schema:
          type: string
          description: An option for gene expression level consolidation.
          enum:
          - pickmax
          - pickvar
          - average
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListExperimentExpressionLevelsValueObject'
  /datasets/{dataset}/platforms:
    get:
      summary: Retrieve the platform of a dataset
      operationId: getDatasetPlatforms
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListArrayDesignValueObject'
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/data/raw:
    get:
      summary: Retrieve raw expression data of a dataset
      operationId: getDatasetRawExpression
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            text/tab-separated-values; charset=UTF-8:
              schema:
                type: string
                format: binary
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/samples:
    get:
      summary: Retrieve the samples of a dataset
      operationId: getDatasetSamples
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListBioAssayValueObject'
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets/{dataset}/svd:
    get:
      summary: Retrieve the singular value decomposition (SVD) of a dataset expression
        data
      operationId: getDatasetSvd
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical dataset identifier.
            format: int64
          - type: string
            description: A dataset short name.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectSimpleSVDValueObject'
        "404":
          description: The dataset does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorObject'
  /datasets:
    get:
      summary: Retrieve all datasets
      operationId: getDatasets
      parameters:
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
  /datasets/{dataset}:
    get:
      summary: Retrieve datasets by their identifiers
      operationId: getDatasetsByIds
      parameters:
      - name: dataset
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical dataset identifier.
              format: int64
            - type: string
              description: A dataset short name.
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
  /genes/{gene}/coexpression:
    get:
      summary: Retrieve the coexpression of two given genes
      operationId: getGeneGeneCoexpression
      parameters:
      - name: gene
        in: path
        required: true
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      - name: with
        in: query
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 100
      - name: stringency
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListCoexpressionValueObjectExt'
  /genes/{gene}/goTerms:
    get:
      summary: Retrieve the GO terms associated to a gene
      operationId: getGeneGoTerms
      parameters:
      - name: gene
        in: path
        required: true
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListGeneOntologyTermValueObject'
  /genes/{gene}/locations:
    get:
      summary: Retrieve the physical locations of a given gene
      operationId: getGeneLocations
      parameters:
      - name: gene
        in: path
        required: true
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListPhysicalLocationValueObject'
  /genes/{gene}/probes:
    get:
      summary: Retrieve the probes associated to a genes
      operationId: getGeneProbes
      parameters:
      - name: gene
        in: path
        required: true
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectCompositeSequenceValueObject'
  /genes/{genes}:
    get:
      summary: Retrieve genes matching a gene identifier
      operationId: getGenes
      parameters:
      - name: genes
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: string
              description: An Ensembl gene identifier which typically starts with
                'ENSG'.
              externalDocs:
                url: https://www.ensembl.org/
            - type: string
              description: An NCBI gene identifier.
              externalDocs:
                url: https://www.ncbi.nlm.nih.gov/gene
            - type: string
              description: An official gene symbol approved by HGNC.
              externalDocs:
                url: https://www.genenames.org/
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListGeneValueObject'
  /platforms/{platform}/annotations:
    get:
      summary: Retrieve the annotations of a given platform
      operationId: getPlatformAnnotations
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      responses:
        "200":
          content:
            text/tab-separated-values; charset=UTF-8:
              schema:
                type: string
                format: binary
  /platforms/{platform}/datasets:
    get:
      summary: Retrieve all experiments within a given platform
      operationId: getPlatformDatasets
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
  /platforms/{platform}/elements/{probes}:
    get:
      summary: Retrieve the selected composite sequences for a given platform
      operationId: getPlatformElement
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      - name: probes
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A composite sequence numerical identifier.
              format: int64
            - type: string
              description: A composite sequence name.
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectCompositeSequenceValueObject'
  /platforms/{platform}/elements/{probe}/genes:
    get:
      summary: Retrieve the genes associated to a probe in a given platform
      operationId: getPlatformElementGenes
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      - name: probe
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A composite sequence numerical identifier.
            format: int64
          - type: string
            description: A composite sequence name.
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectGeneValueObject'
  /platforms/{platform}/elements:
    get:
      summary: Retrieve the composite sequences for a given platform
      operationId: getPlatformElements
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectCompositeSequenceValueObject'
  /platforms:
    get:
      summary: Retrieve all platforms
      operationId: getPlatforms
      parameters:
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectArrayDesignValueObject'
  /platforms/{platform}:
    get:
      summary: Retrieve all platforms matching a set of platform identifiers
      operationId: getPlatformsByIds
      parameters:
      - name: platform
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A platform numerical identifier.
              format: int64
            - type: string
              description: A platform short name.
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectArrayDesignValueObject'
  /:
    get:
      summary: Retrieve an object with basic API information
      operationId: getApiInfo
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectApiInfoValueObject'
  /search:
    get:
      summary: Search everything in Gemma.
      operationId: search
      parameters:
      - name: query
        in: query
        schema:
          type: string
      - name: taxon
        in: query
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: platform
        in: query
        schema:
          oneOf:
          - type: integer
            description: A platform numerical identifier.
            format: int64
          - type: string
            description: A platform short name.
      - name: resultTypes
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ubic.gemma.model.analysis.expression.ExpressionExperimentSet
            - ubic.gemma.model.common.description.BibliographicReference
            - ubic.gemma.model.expression.arrayDesign.ArrayDesign
            - ubic.gemma.model.association.phenotype.PhenotypeAssociation
            - ubic.gemma.model.expression.experiment.ExpressionExperiment
            - ubic.gemma.model.expression.designElement.CompositeSequence
            - ubic.gemma.model.genome.Gene
            - ubic.gemma.model.genome.biosequence.BioSequence
            - ubic.gemma.model.genome.gene.GeneSet
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultsResponseDataObject'
  /taxa/{taxon}/genes/{gene}/locations:
    get:
      summary: Retrieve physical locations for a given gene and taxon
      operationId: getGeneLocationsInTaxon
      parameters:
      - name: taxon
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: gene
        in: path
        required: true
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListPhysicalLocationValueObject'
  /taxa:
    get:
      summary: Retrieve all available taxa
      operationId: getTaxa
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListTaxonValueObject'
  /taxa/{taxa}:
    get:
      summary: Retrieve taxa by their identifiers
      operationId: getTaxaByIds
      parameters:
      - name: taxa
        in: path
        required: true
        schema:
          type: array
          items:
            oneOf:
            - type: integer
              description: A numerical taxon identifier.
              format: int64
            - type: integer
              description: An NCBI taxon identifier.
              format: int64
              externalDocs:
                url: https://www.ncbi.nlm.nih.gov/taxonomy
            - type: string
              description: A taxon identifier that matches either its scientific or
                common name.
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListTaxonValueObject'
  /taxa/{taxon}/datasets:
    get:
      summary: Retrieve the datasets for a given taxon
      operationId: getTaxonDatasets
      parameters:
      - name: taxon
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: filter
        in: query
        schema:
          type: string
          description: Filter results by matching the expression. The exact syntax
            is described in the attached external documentation.
          externalDocs:
            url: https://gemma.msl.ubc.ca/resources/apidocs/index.html
          default: ""
      - name: offset
        in: query
        schema:
          minimum: 0
          type: integer
          description: The offset of the first retrieved result.
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: Limit the number of results retrieved.
          format: int32
          default: 20
      - name: sort
        in: query
        schema:
          pattern: ^(\+|-?)(\w+)$
          type: string
          description: Order results by the given property and direction. The '+'
            sign indicate ascending order whereas the '-' indicate descending.
          default: +id
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDataObjectExpressionExperimentValueObject'
  /taxa/{taxon}/genes/{gene}:
    get:
      summary: Retrieve all genes in a given taxon
      operationId: getTaxonGenes
      parameters:
      - name: taxon
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: gene
        in: path
        required: true
        schema:
          oneOf:
          - type: string
            description: An Ensembl gene identifier which typically starts with 'ENSG'.
            externalDocs:
              url: https://www.ensembl.org/
          - type: string
            description: An NCBI gene identifier.
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/gene
          - type: string
            description: An official gene symbol approved by HGNC.
            externalDocs:
              url: https://www.genenames.org/
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListGeneValueObject'
  /taxa/{taxon}/chromosomes/{chromosome}/genes:
    get:
      summary: Retrieve genes overlapping a given region in a taxon
      operationId: getTaxonGenesOverlappingChromosome
      parameters:
      - name: taxon
        in: path
        required: true
        schema:
          oneOf:
          - type: integer
            description: A numerical taxon identifier.
            format: int64
          - type: integer
            description: An NCBI taxon identifier.
            format: int64
            externalDocs:
              url: https://www.ncbi.nlm.nih.gov/taxonomy
          - type: string
            description: A taxon identifier that matches either its scientific or
              common name.
      - name: chromosome
        in: path
        required: true
        schema:
          type: string
      - name: strand
        in: query
        schema:
          type: string
          default: +
      - name: start
        in: query
        schema:
          type: integer
          format: int64
      - name: size
        in: query
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataObjectListGeneValueObject'
components:
  schemas:
    ResponseErrorObject:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/WellComposedErrorBody'
        apiVersion:
          type: string
    WellComposedErrorBody:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    CharacteristicBasicValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        value:
          type: string
        valueUri:
          type: string
        category:
          type: string
        categoryUri:
          type: string
    CharacteristicValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        urlId:
          type: string
        alreadyPresentInDatabase:
          type: boolean
        alreadyPresentOnGene:
          type: boolean
        category:
          type: string
        categoryUri:
          type: string
        child:
          type: boolean
        numTimesUsed:
          type: integer
          format: int32
        ontologyUsed:
          type: string
        privateGeneCount:
          type: integer
          format: int64
        publicGeneCount:
          type: integer
          format: int64
        root:
          type: boolean
        taxon:
          type: string
        value:
          type: string
        valueUri:
          type: string
    ContrastResultValueObject:
      type: object
      properties:
        pvalue:
          type: number
          format: double
        coefficient:
          type: number
          format: double
        logFoldChange:
          type: number
          format: double
        factorValue:
          $ref: '#/components/schemas/FactorValueBasicValueObject'
        secondFactorValue:
          $ref: '#/components/schemas/FactorValueBasicValueObject'
        tstat:
          type: number
          format: double
    DiffExResultSetSummaryValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        analysisId:
          type: integer
          format: int64
        arrayDesignsUsed:
          type: array
          items:
            type: integer
            format: int64
        baselineGroup:
          $ref: '#/components/schemas/FactorValueValueObject'
        downregulatedCount:
          type: integer
          format: int32
        experimentalFactors:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentalFactorValueObject'
        factorIds:
          type: array
          items:
            type: integer
            format: int64
        numberOfDiffExpressedProbes:
          type: integer
          format: int32
        numberOfGenesAnalyzed:
          type: integer
          format: int32
        numberOfProbesAnalyzed:
          type: integer
          format: int32
        threshold:
          type: number
          format: double
        upregulatedCount:
          type: integer
          format: int32
        bioAssaySetAnalyzedId:
          type: integer
          format: int64
        qvalue:
          type: number
          format: double
        experimentalFactorsByValueObject:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/ExperimentalFactorValueObject'
        resultSetId:
          type: integer
          format: int64
    DifferentialExpressionAnalysisResultValueObject:
      type: object
      properties:
        probeId:
          type: integer
          format: int64
        probeName:
          type: string
        genes:
          type: array
          items:
            $ref: '#/components/schemas/GeneValueObject'
        correctedPvalue:
          type: number
          format: double
        rank:
          type: number
          format: double
        contrasts:
          type: array
          items:
            $ref: '#/components/schemas/ContrastResultValueObject'
        pvalue:
          type: number
          format: double
    DifferentialExpressionAnalysisValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        factorValuesUsed:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/FactorValueValueObject'
        resultSets:
          type: array
          items:
            $ref: '#/components/schemas/DiffExResultSetSummaryValueObject'
        arrayDesignsUsed:
          type: array
          items:
            type: integer
            format: int64
        bioAssaySetId:
          type: integer
          format: int64
        sourceExperiment:
          type: integer
          format: int64
        subsetFactor:
          $ref: '#/components/schemas/ExperimentalFactorValueObject'
        subsetFactorValue:
          $ref: '#/components/schemas/FactorValueValueObject'
        subset:
          type: boolean
    ExperimentalFactorValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          type: string
        categoryUri:
          type: string
        description:
          type: string
        factorValues:
          type: string
        name:
          type: string
        numValues:
          type: integer
          format: int32
        type:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/FactorValueValueObject'
    ExpressionAnalysisResultSetValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        analysis:
          $ref: '#/components/schemas/DifferentialExpressionAnalysisValueObject'
        experimentalFactors:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentalFactorValueObject'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DifferentialExpressionAnalysisResultValueObject'
    FactorValueBasicValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicBasicValueObject'
        experimentalFactorCategory:
          $ref: '#/components/schemas/CharacteristicBasicValueObject'
        measurement:
          $ref: '#/components/schemas/MeasurementValueObject'
        fvValue:
          type: string
        fvSummary:
          type: string
        experimentalFactorId:
          type: integer
          format: int64
        baseline:
          type: boolean
    FactorValueValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          type: string
        categoryUri:
          type: string
        description:
          type: string
        value:
          type: string
        valueUri:
          type: string
        charId:
          type: integer
          format: int64
        factorId:
          type: integer
          format: int64
        isBaseline:
          type: boolean
        measurement:
          type: boolean
        factorValue:
          type: string
    GeneSetValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        geneIds:
          type: array
          items:
            type: integer
            format: int64
        isPublic:
          type: boolean
        isShared:
          type: boolean
        name:
          type: string
        size:
          type: integer
          format: int32
        taxonId:
          type: integer
          format: int64
        taxonName:
          type: string
        userOwned:
          type: boolean
        userCanWrite:
          type: boolean
    GeneValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        aliases:
          type: array
          items:
            type: string
        associatedExperimentCount:
          type: integer
          format: int32
        compositeSequenceCount:
          type: integer
          format: int32
        geneSets:
          type: array
          items:
            $ref: '#/components/schemas/GeneSetValueObject'
        homologues:
          type: array
          items:
            $ref: '#/components/schemas/GeneValueObject'
        isQuery:
          type: boolean
        multifunctionalityRank:
          type: number
          format: double
        ncbiId:
          type: integer
          format: int32
        ensemblId:
          type: string
        nodeDegreeNegRanks:
          type: array
          items:
            type: number
            format: double
        nodeDegreePosRanks:
          type: array
          items:
            type: number
            format: double
        nodeDegreesNeg:
          type: array
          items:
            type: integer
            format: int32
        nodeDegreesPos:
          type: array
          items:
            type: integer
            format: int32
        numGoTerms:
          type: integer
          format: int32
        officialName:
          type: string
        officialSymbol:
          type: string
        phenotypes:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicValueObject'
        platformCount:
          type: integer
          format: int32
        score:
          type: number
          format: double
        taxonCommonName:
          type: string
        taxonId:
          type: integer
          format: int64
        taxonScientificName:
          type: string
    MeasurementValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        value:
          type: string
        unit:
          type: string
        unitId:
          type: integer
          format: int64
        type:
          type: string
        representation:
          type: string
    ResponseDataObjectExpressionAnalysisResultSetValueObject:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ExpressionAnalysisResultSetValueObject'
    PaginatedResponseDataObjectExpressionAnalysisResultSetValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExpressionAnalysisResultSetValueObject'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortValueObject'
        totalElements:
          type: integer
          format: int64
    SortValueObject:
      type: object
      properties:
        orderBy:
          type: string
        direction:
          type: string
    DatasetArg:
      oneOf:
      - type: integer
        description: A numerical dataset identifier.
        format: int64
      - type: string
        description: A dataset short name.
    DatabaseEntryArg:
      oneOf:
      - type: integer
        description: A database entry numerical identifier.
        format: int64
      - type: string
        description: A database entry name.
    AnnotationSearchResultValueObject:
      type: object
      properties:
        value:
          type: string
        valueUri:
          type: string
        category:
          type: string
        categoryUri:
          type: string
    ResponseDataObjectListAnnotationSearchResultValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AnnotationSearchResultValueObject'
    AuditEventType:
      type: object
      properties:
        id:
          type: integer
          format: int64
    AuditEventValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        performer:
          type: string
        date:
          type: string
          format: date-time
        action:
          type: string
        note:
          type: string
        detail:
          type: string
        eventType:
          $ref: '#/components/schemas/AuditEventType'
        eventTypeName:
          type: string
        actionName:
          type: string
    ExpressionExperimentValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        lastUpdated:
          type: string
          format: date-time
        troubled:
          type: boolean
        lastTroubledEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        needsAttention:
          type: boolean
        lastNeedsAttentionEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        curationNote:
          type: string
        lastNoteUpdateEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        bioAssayCount:
          type: integer
          format: int32
        description:
          type: string
        name:
          type: string
        accession:
          type: string
        arrayDesignCount:
          type: integer
          format: int32
        batchConfound:
          type: string
        batchEffect:
          type: string
        bioMaterialCount:
          type: integer
          format: int32
        currentUserHasWritePermission:
          type: boolean
        currentUserIsOwner:
          type: boolean
        experimentalDesign:
          type: integer
          format: int64
        externalDatabase:
          type: string
        externalUri:
          type: string
        geeq:
          $ref: '#/components/schemas/GeeqValueObject'
        isPublic:
          type: boolean
        isShared:
          type: boolean
        metadata:
          type: string
        processedExpressionVectorCount:
          type: integer
          format: int32
        shortName:
          type: string
        source:
          type: string
        suitableForDEA:
          type: boolean
        taxon:
          type: string
        taxonId:
          type: integer
          format: int64
        technologyType:
          type: string
        userOwned:
          type: boolean
        userCanWrite:
          type: boolean
        troubleDetails:
          type: string
    GeeqValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        publicQualityScore:
          type: number
          format: double
        publicSuitabilityScore:
          type: number
          format: double
        getsScorePublication:
          type: number
          format: double
        getsScorePlatformAmount:
          type: number
          format: double
        getsScorePlatformsTechMulti:
          type: number
          format: double
        getsScoreAvgPlatformPopularity:
          type: number
          format: double
        getsScoreAvgPlatformSize:
          type: number
          format: double
        getsScoreSampleSize:
          type: number
          format: double
        getsScoreRawData:
          type: number
          format: double
        getsScoreMissingValues:
          type: number
          format: double
        getqScoreOutliers:
          type: number
          format: double
        getqScoreSampleMeanCorrelation:
          type: number
          format: double
        getqScoreSampleMedianCorrelation:
          type: number
          format: double
        getqScoreSampleCorrelationVariance:
          type: number
          format: double
        getqScorePlatformsTech:
          type: number
          format: double
        getqScoreReplicates:
          type: number
          format: double
        getqScoreBatchInfo:
          type: number
          format: double
        getqScorePublicBatchEffect:
          type: number
          format: double
        getqScorePublicBatchConfound:
          type: number
          format: double
        noVectors:
          type: boolean
        corrMatIssues:
          type: string
          format: byte
        replicatesIssues:
          type: string
          format: byte
        batchCorrected:
          type: boolean
    PaginatedResponseDataObjectExpressionExperimentValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExpressionExperimentValueObject'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortValueObject'
        totalElements:
          type: integer
          format: int64
    TaxonArg:
      oneOf:
      - type: integer
        description: A numerical taxon identifier.
        format: int64
      - type: integer
        description: An NCBI taxon identifier.
        format: int64
        externalDocs:
          url: https://www.ncbi.nlm.nih.gov/taxonomy
      - type: string
        description: A taxon identifier that matches either its scientific or common
          name.
    AnnotationValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        classUri:
          type: string
        className:
          type: string
        termUri:
          type: string
        termName:
          type: string
        parentName:
          type: string
        parentDescription:
          type: string
        parentLink:
          type: string
        parentOfParentName:
          type: string
        parentOfParentDescription:
          type: string
        parentOfParentLink:
          type: string
        description:
          type: string
        evidenceCode:
          type: string
        objectClass:
          type: string
    ResponseDataObjectSetAnnotationValueObject:
      type: object
      properties:
        data:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AnnotationValueObject'
    ExperimentExpressionLevelsValueObject:
      type: object
      properties:
        datasetId:
          type: integer
          format: int64
        geneExpressionLevels:
          type: array
          items:
            $ref: '#/components/schemas/GeneElementExpressionsValueObject'
    GeneElementExpressionsValueObject:
      type: object
      properties:
        geneOfficialSymbol:
          type: string
        geneNcbiId:
          type: integer
          format: int32
        vectors:
          type: array
          items:
            $ref: '#/components/schemas/VectorElementValueObject'
    ResponseDataObjectListExperimentExpressionLevelsValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentExpressionLevelsValueObject'
    VectorElementValueObject:
      type: object
      properties:
        designElementName:
          type: string
        bioAssayExpressionLevels:
          type: object
          additionalProperties:
            type: number
            format: double
    ResponseDataObjectListDifferentialExpressionAnalysisValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DifferentialExpressionAnalysisValueObject'
    GeneArg:
      oneOf:
      - type: string
        description: An Ensembl gene identifier which typically starts with 'ENSG'.
        externalDocs:
          url: https://www.ensembl.org/
      - type: string
        description: An NCBI gene identifier.
        externalDocs:
          url: https://www.ncbi.nlm.nih.gov/gene
      - type: string
        description: An official gene symbol approved by HGNC.
        externalDocs:
          url: https://www.genenames.org/
    ArrayDesignValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        lastUpdated:
          type: string
          format: date-time
        troubled:
          type: boolean
        lastTroubledEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        needsAttention:
          type: boolean
        lastNeedsAttentionEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        curationNote:
          type: string
        lastNoteUpdateEvent:
          $ref: '#/components/schemas/AuditEventValueObject'
        blackListed:
          type: boolean
        color:
          type: string
        dateCached:
          type: string
        description:
          type: string
        designElementCount:
          type: integer
          format: int32
        expressionExperimentCount:
          type: integer
          format: int32
        hasBlatAssociations:
          type: boolean
        hasGeneAssociations:
          type: boolean
        hasSequenceAssociations:
          type: boolean
        isAffymetrixAltCdf:
          type: boolean
        isMerged:
          type: boolean
        isMergee:
          type: boolean
        isSubsumed:
          type: boolean
        isSubsumer:
          type: boolean
        lastGeneMapping:
          type: string
          format: date-time
        lastRepeatMask:
          type: string
          format: date-time
        lastSequenceAnalysis:
          type: string
          format: date-time
        lastSequenceUpdate:
          type: string
          format: date-time
        name:
          type: string
        numGenes:
          type: string
        numProbeAlignments:
          type: string
        numProbeSequences:
          type: string
        numProbesToGenes:
          type: string
        shortName:
          type: string
        switchedExpressionExperimentCount:
          type: integer
          format: int32
        taxon:
          type: string
        taxonID:
          type: integer
          format: int64
        technologyType:
          type: string
        troubleDetails:
          type: string
    ResponseDataObjectListArrayDesignValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ArrayDesignValueObject'
    BioAssayValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        accession:
          $ref: '#/components/schemas/DatabaseEntryValueObject'
        arrayDesign:
          $ref: '#/components/schemas/ArrayDesignValueObject'
        description:
          type: string
        metadata:
          type: string
        name:
          type: string
        originalPlatform:
          $ref: '#/components/schemas/ArrayDesignValueObject'
        outlier:
          type: boolean
        predictedOutlier:
          type: boolean
        processingDate:
          type: string
          format: date-time
        sample:
          $ref: '#/components/schemas/BioMaterialValueObject'
        sequencePairedReads:
          type: boolean
        sequenceReadCount:
          type: integer
          format: int32
        sequenceReadLength:
          type: integer
          format: int32
        userFlaggedOutlier:
          type: boolean
    BioMaterialValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        assayDescription:
          type: string
        assayName:
          type: string
        bioAssays:
          type: array
          items:
            type: integer
            format: int64
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicValueObject'
        description:
          type: string
        factorIdToFactorValueId:
          type: object
          additionalProperties:
            type: string
        factors:
          type: object
          additionalProperties:
            type: string
        factorValueObjects:
          type: array
          items:
            $ref: '#/components/schemas/IdentifiableValueObject'
        factorValues:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        assayProcessingDate:
          type: string
          format: date-time
        characteristicValues:
          type: object
          additionalProperties:
            type: string
    DatabaseEntryValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        accession:
          type: string
        externalDatabase:
          $ref: '#/components/schemas/ExternalDatabaseValueObject'
    ExternalDatabaseValueObject:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        checked:
          type: boolean
    IdentifiableValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
    ResponseDataObjectListBioAssayValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BioAssayValueObject'
    DoubleMatrixLongInteger:
      type: object
      properties:
        colNames:
          type: array
          items:
            type: integer
            format: int32
        rowNames:
          type: array
          items:
            type: integer
            format: int64
        rawMatrix:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
        rowNameMapIterator:
          type: object
        columnNames:
          type: array
          writeOnly: true
          items:
            type: integer
            format: int32
    ResponseDataObjectSimpleSVDValueObject:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SimpleSVDValueObject'
    SimpleSVDValueObject:
      type: object
      properties:
        bioMaterialIds:
          type: array
          items:
            type: integer
            format: int64
        variances:
          type: array
          items:
            type: number
            format: double
        getvMatrix:
          $ref: '#/components/schemas/DoubleMatrixLongInteger'
    CoexpressionValueObjectExt:
      type: object
      properties:
        containsMyData:
          type: boolean
        foundGene:
          $ref: '#/components/schemas/GeneValueObject'
        foundGeneNodeDegree:
          type: integer
          format: int32
        foundGeneNodeDegreeRank:
          type: number
          format: double
        negSupp:
          type: integer
          format: int32
        numTestedIn:
          type: integer
          format: int32
        posSupp:
          type: integer
          format: int32
        queryGene:
          $ref: '#/components/schemas/GeneValueObject'
        queryGeneNodeDegree:
          type: integer
          format: int32
        queryGeneNodeDegreeRank:
          type: number
          format: double
        sortKey:
          type: string
        supportingExperiments:
          type: array
          items:
            type: integer
            format: int64
        support:
          type: integer
          format: int32
    ResponseDataObjectListCoexpressionValueObjectExt:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CoexpressionValueObjectExt'
    GeneOntologyTermValueObject:
      type: object
      properties:
        goId:
          type: string
        label:
          type: string
        uri:
          type: string
        comment:
          type: string
        localName:
          type: string
        term:
          type: string
        obsolete:
          type: boolean
    ResponseDataObjectListGeneOntologyTermValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GeneOntologyTermValueObject'
    PhysicalLocationValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nucleotide:
          type: integer
          format: int64
        nucleotideLength:
          type: integer
          format: int32
        strand:
          type: string
        bin:
          type: integer
          format: int32
        chromosome:
          type: string
        taxon:
          $ref: '#/components/schemas/TaxonValueObject'
    ResponseDataObjectListPhysicalLocationValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PhysicalLocationValueObject'
    TaxonValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        scientificName:
          type: string
        commonName:
          type: string
        ncbiId:
          type: integer
          format: int32
        isSpecies:
          type: boolean
        isGenesUsable:
          type: boolean
        externalDatabase:
          $ref: '#/components/schemas/ExternalDatabaseValueObject'
    BioSequenceValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        fractionRepeats:
          type: number
          format: double
        length:
          type: integer
          format: int64
        name:
          type: string
        sequence:
          type: string
        sequenceDatabaseEntry:
          $ref: '#/components/schemas/DatabaseEntryValueObject'
        taxon:
          $ref: '#/components/schemas/TaxonValueObject'
        type:
          $ref: '#/components/schemas/SequenceType'
    BlatResultValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        blockCount:
          type: integer
          format: int32
        blockSizes:
          type: string
        identity:
          type: number
          format: double
        matches:
          type: integer
          format: int32
        mismatches:
          type: integer
          format: int32
        ns:
          type: integer
          format: int32
        queryEnd:
          type: integer
          format: int32
        queryGapBases:
          type: integer
          format: int32
        queryGapCount:
          type: integer
          format: int32
        querySequence:
          $ref: '#/components/schemas/BioSequenceValueObject'
        queryStart:
          type: integer
          format: int32
        queryStarts:
          type: string
        repMatches:
          type: integer
          format: int32
        score:
          type: number
          format: double
        strand:
          type: string
        targetChromosomeName:
          type: string
        targetDatabase:
          type: string
        taxon:
          $ref: '#/components/schemas/TaxonValueObject'
        targetEnd:
          type: integer
          format: int64
        targetGapBases:
          type: integer
          format: int32
        targetGapCount:
          type: integer
          format: int32
        targetStart:
          type: integer
          format: int64
        targetStarts:
          type: string
    CompositeSequenceValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        arrayDesign:
          $ref: '#/components/schemas/ArrayDesignValueObject'
        geneMappingSummaries:
          type: array
          items:
            $ref: '#/components/schemas/GeneMappingSummary'
    GeneMappingSummary:
      type: object
      properties:
        geneProductIdMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GeneProductValueObject'
        geneProductIdGeneMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GeneValueObject'
        blatResult:
          $ref: '#/components/schemas/BlatResultValueObject'
        geneProductMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GeneValueObject'
        compositeSequence:
          $ref: '#/components/schemas/CompositeSequenceValueObject'
        identity:
          type: number
          format: double
        score:
          type: number
          format: double
        blatResultId:
          type: string
        geneProducts:
          type: array
          items:
            $ref: '#/components/schemas/GeneProductValueObject'
    GeneProductValueObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ncbiId:
          type: string
        name:
          type: string
        geneId:
          type: integer
          format: int64
        chromosome:
          type: string
        strand:
          type: string
        nucleotideStart:
          type: integer
          format: int64
        nucleotideEnd:
          type: integer
          format: int64
    PaginatedResponseDataObjectCompositeSequenceValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CompositeSequenceValueObject'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortValueObject'
        totalElements:
          type: integer
          format: int64
    SequenceType:
      type: object
      properties:
        value:
          type: string
    ResponseDataObjectListGeneValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GeneValueObject'
    PlatformArg:
      oneOf:
      - type: integer
        description: A platform numerical identifier.
        format: int64
      - type: string
        description: A platform short name.
    AlternateName:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
    Analysis:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        protocol:
          $ref: '#/components/schemas/Protocol'
    ArrayDesign:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
        advertisedNumberOfDesignElements:
          type: integer
          format: int32
        alternateNames:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AlternateName'
        alternativeTo:
          $ref: '#/components/schemas/ArrayDesign'
        compositeSequences:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CompositeSequence'
        curationDetails:
          $ref: '#/components/schemas/CurationDetails'
        designProvider:
          $ref: '#/components/schemas/Contact'
        externalReferences:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DatabaseEntry'
        mergedInto:
          $ref: '#/components/schemas/ArrayDesign'
        mergees:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ArrayDesign'
        primaryTaxon:
          $ref: '#/components/schemas/Taxon'
        shortName:
          type: string
        subsumedArrayDesigns:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ArrayDesign'
        subsumingArrayDesign:
          $ref: '#/components/schemas/ArrayDesign'
        technologyType:
          $ref: '#/components/schemas/TechnologyType'
    AuditAction:
      type: object
      properties:
        value:
          type: string
    AuditEvent:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AuditAction'
        date:
          type: string
          format: date-time
        detail:
          type: string
        eventType:
          $ref: '#/components/schemas/AuditEventType'
        id:
          type: integer
          format: int64
        note:
          type: string
        performer:
          $ref: '#/components/schemas/User'
    AuditTrail:
      type: object
      properties:
        id:
          type: integer
          format: int64
        events:
          type: array
          items:
            $ref: '#/components/schemas/AuditEvent'
        creationEvent:
          $ref: '#/components/schemas/AuditEvent'
        last:
          $ref: '#/components/schemas/AuditEvent'
    BibliographicReference:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        authorList:
          type: string
        title:
          type: string
        publisher:
          type: string
        editor:
          type: string
        volume:
          type: string
        issue:
          type: string
        pages:
          type: string
        publication:
          type: string
        fullTextUri:
          type: string
        abstractText:
          type: string
        citation:
          type: string
        publicationDate:
          type: string
          format: date-time
        annotatedAbstract:
          type: string
        pubAccession:
          $ref: '#/components/schemas/DatabaseEntry'
        retracted:
          type: boolean
        annotations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        meshTerms:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MedicalSubjectHeading'
        keywords:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Keyword'
        chemicals:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Compound'
    BioSequence:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        length:
          type: integer
          format: int64
        sequence:
          type: string
        isApproximateLength:
          type: boolean
        isCircular:
          type: boolean
        polymerType:
          $ref: '#/components/schemas/PolymerType'
        type:
          $ref: '#/components/schemas/SequenceType'
        fractionRepeats:
          type: number
          format: double
        sequenceDatabaseEntry:
          $ref: '#/components/schemas/DatabaseEntry'
        taxon:
          $ref: '#/components/schemas/Taxon'
        bioSequence2GeneProduct:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BioSequence2GeneProduct'
    BioSequence2GeneProduct:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sourceAnalysis:
          $ref: '#/components/schemas/Analysis'
        overlap:
          type: integer
          format: int32
        score:
          type: number
          format: double
        threePrimeDistance:
          type: integer
          format: int64
        threePrimeDistanceMeasurementMethod:
          $ref: '#/components/schemas/ThreePrimeDistanceMethod'
        specificity:
          type: number
          format: double
        bioSequence:
          $ref: '#/components/schemas/BioSequence'
        geneProduct:
          $ref: '#/components/schemas/GeneProduct'
    Characteristic:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        category:
          type: string
        categoryUri:
          type: string
        evidenceCode:
          $ref: '#/components/schemas/GOEvidenceCode'
        originalValue:
          type: string
        value:
          type: string
        valueUri:
          type: string
    Chromosome:
      type: object
      properties:
        name:
          type: string
        assemblyDatabase:
          $ref: '#/components/schemas/ExternalDatabase'
        sequence:
          $ref: '#/components/schemas/BioSequence'
        taxon:
          $ref: '#/components/schemas/Taxon'
        id:
          type: integer
          format: int64
    CompositeSequence:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        biologicalCharacteristic:
          $ref: '#/components/schemas/BioSequence'
        arrayDesign:
          $ref: '#/components/schemas/ArrayDesign'
    CompositeSequenceArg:
      oneOf:
      - type: integer
        description: A composite sequence numerical identifier.
        format: int64
      - type: string
        description: A composite sequence name.
    Compound:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        registryNumber:
          type: string
    Contact:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        email:
          type: string
    CurationDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        lastUpdated:
          type: string
          format: date-time
        lastNeedsAttentionEvent:
          $ref: '#/components/schemas/AuditEvent'
        needsAttention:
          type: boolean
        lastTroubledEvent:
          $ref: '#/components/schemas/AuditEvent'
        troubled:
          type: boolean
        lastNoteUpdateEvent:
          $ref: '#/components/schemas/AuditEvent'
        curationNote:
          type: string
    DatabaseEntry:
      type: object
      properties:
        accession:
          type: string
        accessionVersion:
          type: string
        id:
          type: integer
          format: int64
        externalDatabase:
          $ref: '#/components/schemas/ExternalDatabase'
        uri:
          type: string
    DatabaseType:
      type: object
      properties:
        value:
          type: string
    ExternalDatabase:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        localInstallDbName:
          type: string
        webUri:
          type: string
        ftpUri:
          type: string
        type:
          $ref: '#/components/schemas/DatabaseType'
        databaseSupplier:
          $ref: '#/components/schemas/Contact'
    GOEvidenceCode:
      type: object
      properties:
        value:
          type: string
    Gene:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        previousNcbiId:
          type: string
        physicalLocation:
          $ref: '#/components/schemas/PhysicalLocation'
        officialSymbol:
          type: string
        officialName:
          type: string
        ncbiGeneId:
          type: integer
          format: int32
        ensemblId:
          type: string
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GeneProduct'
        aliases:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GeneAlias'
        taxon:
          $ref: '#/components/schemas/Taxon'
        accessions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DatabaseEntry'
        multifunctionality:
          $ref: '#/components/schemas/Multifunctionality'
        phenotypeAssociations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PhenotypeAssociation'
    GeneAlias:
      type: object
      properties:
        alias:
          type: string
        id:
          type: integer
          format: int64
    GeneProduct:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        previousNcbiId:
          type: string
        physicalLocation:
          $ref: '#/components/schemas/PhysicalLocation'
        ncbiGi:
          type: string
        accessions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DatabaseEntry'
        exons:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PhysicalLocation'
        gene:
          $ref: '#/components/schemas/Gene'
    GeneralType:
      type: object
      properties:
        value:
          type: string
    JobInfo:
      type: object
      properties:
        runningStatus:
          type: boolean
        failedMessage:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        phases:
          type: integer
          format: int32
        description:
          type: string
        messages:
          type: string
        taskId:
          type: string
        id:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/User'
    Keyword:
      type: object
      properties:
        id:
          type: integer
          format: int64
        isMajorTopic:
          type: boolean
        term:
          type: string
    MedicalSubjectHeading:
      type: object
      properties:
        id:
          type: integer
          format: int64
        isMajorTopic:
          type: boolean
        term:
          type: string
    Multifunctionality:
      type: object
      properties:
        score:
          type: number
          format: double
        rank:
          type: number
          format: double
        numGoTerms:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
    PhenotypeAssociation:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
        evidenceCode:
          $ref: '#/components/schemas/GOEvidenceCode'
        isNegativeEvidence:
          type: boolean
        score:
          type: string
        strength:
          type: number
          format: double
        gene:
          $ref: '#/components/schemas/Gene'
        phenotypes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        associationType:
          $ref: '#/components/schemas/Characteristic'
        evidenceSource:
          $ref: '#/components/schemas/DatabaseEntry'
        scoreType:
          $ref: '#/components/schemas/QuantitationType'
        phenotypeAssociationPublications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PhenotypeAssociationPublication'
        mappingType:
          $ref: '#/components/schemas/PhenotypeMappingType'
        originalPhenotype:
          type: string
        relationship:
          type: string
        lastUpdated:
          type: string
          format: date-time
    PhenotypeAssociationPublication:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        citation:
          $ref: '#/components/schemas/BibliographicReference'
    PhenotypeMappingType:
      type: object
      properties:
        value:
          type: string
        mutable:
          type: boolean
    PhysicalLocation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        chromosome:
          $ref: '#/components/schemas/Chromosome'
        nucleotide:
          type: integer
          format: int64
        nucleotideLength:
          type: integer
          format: int32
        strand:
          type: string
        bin:
          type: integer
          format: int32
    PolymerType:
      type: object
      properties:
        value:
          type: string
    PrimitiveType:
      type: object
      properties:
        value:
          type: string
    Protocol:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
    QuantitationType:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        isBackground:
          type: boolean
        isBackgroundSubtracted:
          type: boolean
        isBatchCorrected:
          type: boolean
        isMaskedPreferred:
          type: boolean
        isNormalized:
          type: boolean
        isPreferred:
          type: boolean
        isRecomputedFromRawData:
          type: boolean
        isRatio:
          type: boolean
        generalType:
          $ref: '#/components/schemas/GeneralType'
        representation:
          $ref: '#/components/schemas/PrimitiveType'
        scale:
          $ref: '#/components/schemas/ScaleType'
        type:
          $ref: '#/components/schemas/StandardQuantitationType'
    ScaleType:
      type: object
      properties:
        value:
          type: string
    StandardQuantitationType:
      type: object
      properties:
        value:
          type: string
    Taxon:
      type: object
      properties:
        scientificName:
          type: string
        commonName:
          type: string
        ncbiId:
          type: integer
          format: int32
        isGenesUsable:
          type: boolean
        secondaryNcbiId:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        externalDatabase:
          $ref: '#/components/schemas/ExternalDatabase'
    TechnologyType:
      type: object
      properties:
        value:
          type: string
    ThreePrimeDistanceMethod:
      type: object
      properties:
        value:
          type: string
    User:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        email:
          type: string
        lastName:
          type: string
        userName:
          type: string
        password:
          type: string
        passwordHint:
          type: string
        enabled:
          type: boolean
        signupToken:
          type: string
        signupTokenDatestamp:
          type: string
          format: date-time
        jobs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/JobInfo'
        fullName:
          type: string
    PaginatedResponseDataObjectGeneValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GeneValueObject'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortValueObject'
        totalElements:
          type: integer
          format: int64
    PaginatedResponseDataObjectArrayDesignValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ArrayDesignValueObject'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortValueObject'
        totalElements:
          type: integer
          format: int64
    ApiInfoValueObject:
      type: object
      properties:
        welcome:
          type: string
        version:
          type: string
        docs:
          type: string
    ResponseDataObjectApiInfoValueObject:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApiInfoValueObject'
    IdentifiableValueObjectIdentifiable:
      type: object
      properties:
        id:
          type: integer
          format: int64
    SearchResultValueObject:
      type: object
      properties:
        resultId:
          type: integer
          format: int64
        resultType:
          type: string
        score:
          type: number
          format: double
        resultObject:
          $ref: '#/components/schemas/IdentifiableValueObjectIdentifiable'
    SearchResultsResponseDataObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultValueObject'
        searchSettings:
          $ref: '#/components/schemas/SearchSettingsValueObject'
    SearchSettingsValueObject:
      type: object
      properties:
        query:
          type: string
        resultTypes:
          uniqueItems: true
          type: array
          items:
            type: string
        taxon:
          $ref: '#/components/schemas/TaxonValueObject'
        platform:
          $ref: '#/components/schemas/ArrayDesignValueObject'
        maxResults:
          type: integer
          format: int32
    SearchResultType:
      type: array
      items:
        type: string
        enum:
        - ubic.gemma.model.analysis.expression.ExpressionExperimentSet
        - ubic.gemma.model.common.description.BibliographicReference
        - ubic.gemma.model.expression.arrayDesign.ArrayDesign
        - ubic.gemma.model.association.phenotype.PhenotypeAssociation
        - ubic.gemma.model.expression.experiment.ExpressionExperiment
        - ubic.gemma.model.expression.designElement.CompositeSequence
        - ubic.gemma.model.genome.Gene
        - ubic.gemma.model.genome.biosequence.BioSequence
        - ubic.gemma.model.genome.gene.GeneSet
    ResponseDataObjectListTaxonValueObject:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaxonValueObject'
  securitySchemes:
    basicAuth:
      type: http
      description: Authenticate with your Gemma username and password
      scheme: basic
    cookieAuth:
      type: apiKey
      description: Authenticate with your current Gemma session.
      name: JSESSIONID
      in: cookie
